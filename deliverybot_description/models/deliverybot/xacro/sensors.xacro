<?xml version="1.0"?>

<robot name="deliverybot" xmlns:xacro="http://wiki.ros.org/xacro">
    <xacro:macro name="realsense_camera"
        params="
        name
        parent
        orientation
        mirror
        *origin">
        <link name="${name}_rgb_link_optical" />
        <joint name="${name}_rgb_joint_optical" type="fixed">
            <origin xyz="0.025 0 0" rpy="0 0 0" />
            <parent link="${name}_depth_link" />
            <child link="${name}_rgb_link_optical" />
        </joint>
        <gazebo reference="${name}_rgb_link_optical">
            <sensor type="camera" name="${name}_rgb_camera">
                <visualize>false</visualize>
                <update_rate>10.0</update_rate>
                <camera name="${name}_rgb_camera">
                    <pose>0 0 0 0 0 0</pose>
                    <horizontal_fov>1.487021</horizontal_fov>
                    <image>
                        <width>1280</width>
                        <height>720</height>
                        <format>B8G8R8</format>
                    </image>
                    <clip>
                        <near>0.011</near>
                        <far>10</far>
                    </clip>
                </camera>
                <plugin name="${name}_rgb_controller" filename="libgazebo_ros_camera.so">
                    <ros>
                        <namespace>d430</namespace>
                        <remapping>${name}_rgb/image_raw:=color/image_raw</remapping>
                        <remapping>${name}_rgb/camera_info:=camera_info</remapping>
                    </ros>
                    <alwaysOn>true</alwaysOn>
                    <updateRate>0.0</updateRate>
                    <cameraName>${name}_rgb_camera</cameraName>
                    <frame_name>${name}_rgb_link_optical</frame_name>
                </plugin>
            </sensor>
        </gazebo>
        <link name="${name}_depth_link">
            <visual>
                <origin xyz="0 0 0" rpy="0 0 ${orientation}" />
                <geometry>
                    <mesh
                        filename="package://deliverybot_description/models/deliverybot/meshes/IntelRealsense.dae"
                        scale="0.1 0.1 0.1" />
                </geometry>
            </visual>
            <collision>
                <origin xyz="0 0 0" rpy="0 0 ${orientation}" />
                <geometry>
                    <mesh
                        filename="package://deliverybot_description/models/deliverybot/meshes/IntelRealsense.dae"
                        scale="0.1 0.1 0.1" />
                </geometry>
            </collision>
            <inertial>
                <origin xyz="0 0 0" rpy="0 0 ${orientation}" />
                <mass value="0.1" />
                <inertia ixx="0.001" ixy="0" ixz="0" iyy="0.005" iyz="0" izz="0.005" />
            </inertial>
        </link>
        <link name="${name}_depth_link_optical" />
        <joint name="${name}_depth_joint" type="fixed">
            <parent link="${parent}" />
            <child link="${name}_depth_link" />
            <xacro:insert_block name="origin" />
        </joint>
        <joint name="${name}_depth_joint_optical" type="fixed">
            <origin xyz="0 0 0" rpy="${-pi/2} 0 ${-pi/2}" />
            <parent link="${name}_depth_link" />
            <child link="${name}_depth_link_optical" />
        </joint>
        <gazebo reference="${name}_depth_link">
            <sensor type="depth" name="${name}_depth_camera">
                <visualize>false</visualize>
                <update_rate>10.0</update_rate>
                <always_on>true</always_on>
                <pose>0 0 0 0 0 0</pose>
                <camera name="${name}_depth_camera">
                    <horizontal_fov>1.487021</horizontal_fov>
                    <image>
                        <width>424</width>
                        <height>120</height>
                        <format>B8G8R8</format>
                    </image>
                    <clip>
                        <near>0.5</near>
                        <far>8</far>
                    </clip>
                </camera>
                <plugin name="${name}_depth_controller" filename="libgazebo_ros_camera.so">
                    <ros>
                        <namespace>d430</namespace>
                        <remapping>${name}_depth/image_raw:=color/image_raw</remapping>
                        <remapping>${name}_depth/depth/image:=depth/image_rect_raw</remapping>
                        <remapping>${name}_depth/camera_info:=camera_info</remapping>
                        <remapping>${name}_depth/depth/camera_info:=depth/camera_info</remapping>
                        <remapping>${name}_depth/points:=depth/points</remapping>
                    </ros>
                    <frame_name>${name}_depth_link_optical</frame_name>
                    <cameraName>${name}_depth_camera</cameraName>
                    <hack_baseline>0.07</hack_baseline>
                    <min_depth>0.05</min_depth>
                    <max_depth>8.0</max_depth>
                </plugin>
            </sensor>
        </gazebo>
    </xacro:macro>
    <xacro:macro name="lidar"
        params="
        name
        parent
        *origin">
        <link name="${name}_lidar_link">
            <inertial>
                <origin xyz="0 0 -0.025" rpy="0 0 0" />
                <mass value="1.0" />
                <inertia ixx="${1.0* (3.0 * 0.10 * 0.10 + 0.20 * .20) / 12.0}"
                    ixy="0.0" ixz="0.0"
                    iyy="${1.0 * (3.0 * 0.10 * 0.10 + 0.20 * 0.20) / 12.0}"
                    iyz="0.0"
                    izz="${1.0 * (0.10 * 0.10) / 2.0}" />
            </inertial>
            <collision>
                <origin xyz="0 0 -0.025" rpy="0 0 0" />
                <geometry>
                    <mesh
                        filename="package://deliverybot_description/models/deliverybot/meshes/Velodyne.dae" />
                </geometry>
            </collision>
            <visual>
                <origin xyz="0 0 -0.025" rpy="0 0 0" />
                <geometry>
                    <mesh
                        filename="package://deliverybot_description/models/deliverybot/meshes/Velodyne.dae" />
                </geometry>
            </visual>
        </link>
        <joint name="${name}_lidar_joint" type="fixed">
            <parent link="${parent}" />
            <child link="${name}_lidar_link" />
            <xacro:insert_block name="origin"/>
        </joint>
        <gazebo reference="${name}_lidar_link">
            <sensor name="velodyne" type="ray">
                <always_on>true</always_on>
                <visualize>false</visualize>
                <pose>0.0 0 0.0 0 0 0</pose>
                <update_rate>15</update_rate>
                <ray>
                    <scan>
                        <horizontal>
                            <samples>360</samples>
                            <resolution>1.00</resolution>
                            <min_angle>0.000000</min_angle>
                            <max_angle>6.280000</max_angle>
                        </horizontal>
                    </scan>
                    <range>
                        <min>0.120000</min>
                        <max>3.5</max>
                        <resolution>0.015</resolution>
                    </range>
                    <noise>
                        <type>gaussian</type>
                        <mean>0.0</mean>
                        <stddev>0.01</stddev>
                    </noise>
                </ray>
                <plugin name="velodyne_laserscan" filename="libgazebo_ros_ray_sensor.so">
                    <ros>
                        <remapping>~/out:=scan</remapping>
                    </ros>
                    <output_type>sensor_msgs/LaserScan</output_type>
                    <frame_name>${name}_lidar_link</frame_name>
                </plugin>
            </sensor>
        </gazebo>
    </xacro:macro>
    <xacro:macro name="imu" params="name parent">
        <link name="${name}" />
        <joint name="${name}_joint" type="fixed">
            <parent link="${parent}" />
            <child link="${name}" />
            <origin xyz="0 0 0" rpy="0 0 0" />
        </joint>
        <gazebo reference="${name}">
            <sensor name="imu_sensor" type="imu">
                <plugin filename="libgazebo_ros_imu_sensor.so" name="imu_plugin">
                    <ros>
                        <remapping>~/out:=imu</remapping>
                    </ros>
                    <rpyOffset>0 0 1.5708</rpyOffset>
                    <initial_orientation_as_reference>false</initial_orientation_as_reference>
                </plugin>
                <always_on>true</always_on>
                <update_rate>100</update_rate>
                <visualize>true</visualize>
                <imu>
                    <angular_velocity>
                        <x>
                            <noise type="gaussian">
                                <mean>0.0</mean>
                                <stddev>2e-4</stddev>
                                <bias_mean>0.0000075</bias_mean>
                                <bias_stddev>0.0000008</bias_stddev>
                            </noise>
                        </x>
                        <y>
                            <noise type="gaussian">
                                <mean>0.0</mean>
                                <stddev>2e-4</stddev>
                                <bias_mean>0.0000075</bias_mean>
                                <bias_stddev>0.0000008</bias_stddev>
                            </noise>
                        </y>
                        <z>
                            <noise type="gaussian">
                                <mean>0.0</mean>
                                <stddev>2e-4</stddev>
                                <bias_mean>0.0000075</bias_mean>
                                <bias_stddev>0.0000008</bias_stddev>
                            </noise>
                        </z>
                    </angular_velocity>
                    <linear_acceleration>
                        <x>
                            <noise type="gaussian">
                                <mean>0.0</mean>
                                <stddev>1.7e-2</stddev>
                                <bias_mean>0.1</bias_mean>
                                <bias_stddev>0.001</bias_stddev>
                            </noise>
                        </x>
                        <y>
                            <noise type="gaussian">
                                <mean>0.0</mean>
                                <stddev>1.7e-2</stddev>
                                <bias_mean>0.1</bias_mean>
                                <bias_stddev>0.001</bias_stddev>
                            </noise>
                        </y>
                        <z>
                            <noise type="gaussian">
                                <mean>0.0</mean>
                                <stddev>1.7e-2</stddev>
                                <bias_mean>0.1</bias_mean>
                                <bias_stddev>0.001</bias_stddev>
                            </noise>
                        </z>
                    </linear_acceleration>
                </imu>
            </sensor>
        </gazebo>
    </xacro:macro>
    <xacro:macro name="ackermann_odometry" params="parent">
        <gazebo>
            <plugin name="gazebo_ros_ackermann_drive" filename="libgazebo_ros_ackermann_drive.so">
                <update_rate>100.0</update_rate>


                <ros>
                    <remapping>odom:=wheel/odometry</remapping>
                    <remapping>distance:=wheel/distance</remapping>
                </ros>
                <initial_orientation_as_reference>true</initial_orientation_as_reference>

                <front_left_joint>front_left_wheel_joint</front_left_joint>
                <front_right_joint>front_right_wheel_joint</front_right_joint>
                <rear_left_joint>rear_left_wheel_joint</rear_left_joint>
                <rear_right_joint>rear_right_wheel_joint</rear_right_joint>
                <left_steering_joint>front_left_steer_joint</left_steering_joint>
                <right_steering_joint>front_right_steer_joint</right_steering_joint>
                <steering_wheel_joint>center_steer_joint</steering_wheel_joint>
                <rpyOffset>0 0 1.5708</rpyOffset>
                <max_steer>0.610865</max_steer>
                <max_speed>15</max_speed>

                <left_steering_pid_gain>1500 0 1</left_steering_pid_gain>
                <left_steering_i_range>0 0</left_steering_i_range>
                <right_steering_pid_gain>1500 0 1</right_steering_pid_gain>
                <right_steering_i_range>0 0</right_steering_i_range>
                <linear_velocity_pid_gain>1000 0 1</linear_velocity_pid_gain>
                <linear_velocity_i_range>0 0</linear_velocity_i_range>

                <publish_odom>true</publish_odom>
                <publish_odom_tf>false</publish_odom_tf>
                <publish_wheel_tf>false</publish_wheel_tf>
                <publish_distance>false</publish_distance>

                <odometry_frame>odom</odometry_frame>
                <robot_base_frame>base_footprint</robot_base_frame>
            </plugin>
        </gazebo>
    </xacro:macro>
</robot>